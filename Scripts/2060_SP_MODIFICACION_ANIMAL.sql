SET TERM ^ ;

CREATE OR ALTER PROCEDURE SP_MODIFICACION_ANIMAL(
  ID_AUX INTEGER,
  ID_ANIMAL INTEGER,
  ID_RP VARCHAR(10) CHARACTER SET NONE,
  ID_SENASA VARCHAR(9) CHARACTER SET NONE,
  FECHA_NACIMIENTO DATE,
  PESO DOUBLE PRECISION,
  MADRE_BIOLOGICA_EXTERNA INTEGER,
  ESTADO_LACTACION INTEGER,
  RODEO INTEGER,
  RAZA INTEGER,
  POTRERO INTEGER,
  CATEGORIA INTEGER,
  CRONOLOGIA_DENTARIA INTEGER,
  CONDICION_CORPORAL INTEGER,
  GDR INTEGER,
  ESTADO_REPRODUCTIVO INTEGER,
  CIRCUNFERENCIA_ESCROTAL DOUBLE PRECISION,
  ID_PC VARCHAR(10) CHARACTER SET NONE,
  ID_HBA VARCHAR(10) CHARACTER SET NONE,
  ID_RA VARCHAR(10) CHARACTER SET NONE,
  ID_OTRO VARCHAR(10) CHARACTER SET NONE,
  NOMBRE VARCHAR(100) CHARACTER SET NONE,
  APODO VARCHAR(100) CHARACTER SET NONE,
  SEXO INTEGER,
  MADRE_RECEPTORA_EXTERNA INTEGER,
  FECHA_EVENTO DATE,
  TIPO_ALTA INTEGER,
  PRECIO_BRUTO FLOAT,
  PRECIO_UNITARIO FLOAT,
  OBSERVACION VARCHAR(1000) CHARACTER SET NONE,
  ESTABLECIMIENTO INTEGER,
  RESPONSABLE INTEGER,
  PADRE_EXTERNO INTEGER,
  GASTOS FLOAT,
  MADRE_BIOLOGICA_INTERNA INTEGER,
  MADRE_RECEPTORA_INTERNA INTEGER,
  PADRE_INTERNO INTEGER,
  DTA VARCHAR(255) CHARACTER SET NONE,
  DIASPESO VARCHAR(1) CHARACTER SET NONE,
  PROPIETARIO INTEGER,
  ORIGEN INTEGER,
  CRIADOR INTEGER,
  ADN VARCHAR(255) CHARACTER SET NONE,
  TIPIFICACION_SANGUINEA VARCHAR(255) CHARACTER SET NONE,
  ID_IE VARCHAR(64) CHARACTER SET NONE,
  MOCHO INTEGER,
  COLOR INTEGER,
  INFORMADO_AFIP VARCHAR(1) CHARACTER SET NONE)
AS
DECLARE VARIABLE VARGRUPO INTEGER;
DECLARE VARIABLE ID_PADRE INTEGER;
DECLARE VARIABLE TIPO VARCHAR(1);
DECLARE VARIABLE EVENTO INTEGER;
DECLARE VARIABLE EVENTO_HIJO INTEGER;
DECLARE VARIABLE ID_EVE_PESO INTEGER;
DECLARE VARIABLE FECHA_PESO DATE;
DECLARE VARIABLE SISTEMA VARCHAR(20);
DECLARE VARIABLE RAZAAUX INTEGER;
DECLARE VARIABLE EVENTOAUX INTEGER;
DECLARE VARIABLE SUBCATEGORIAAUX INTEGER;
DECLARE VARIABLE PROPIETARIOAUX INTEGER;
DECLARE VARIABLE PORCENTAJEAUX FLOAT;
DECLARE VARIABLE PADRES_INT INTEGER;
DECLARE VARIABLE PADRES_EXT INTEGER;
DECLARE VARIABLE OBSERVACION_CORTA VARCHAR(255) CHARACTER SET NONE;
DECLARE VARIABLE ID_OBS INTEGER;
BEGIN
  IF (ESTADO_REPRODUCTIVO IS NULL) THEN
      ESTADO_REPRODUCTIVO = 0;

  IF (SEXO = 2) THEN
    CIRCUNFERENCIA_ESCROTAL = NULL;
    
  OBSERVACION_CORTA = SUBSTRING(OBSERVACION FROM 1 FOR 255);

  SELECT TA.RAZA, TA.SUBCATEGORIA
  FROM TAB_ANIMALES TA
  WHERE TA.ID_ANIMAL = :ID_ANIMAL
  INTO :RAZAAUX, :SUBCATEGORIAAUX;

  IF (:RAZAAUX <> :RAZA) THEN
     BEGIN
        SUBCATEGORIAAUX = 0;
        FOR SELECT EE.ID_EVENTO FROM EVE_EVENTOS EE JOIN EVE_ACTIVIDAD EA ON EE.ID_EVENTO = EA.ID_EVENTO
            WHERE EE.ANIMAL = :ID_ANIMAL
            INTO :EVENTOAUX
        DO
          BEGIN
               UPDATE EVE_ACTIVIDAD SET SUBCATEGORIA = 0, INSPECCION = NULL, DESTINO_CABANIA = NULL
               WHERE ID_EVENTO = :EVENTOAUX;
          END
     END

  UPDATE TAB_ANIMALES SET ID_RP=:ID_RP, ID_SENASA=:ID_SENASA, FECHA_NACIMIENTO=:FECHA_NACIMIENTO,
     PESO=:PESO, MADRE_BIOLOGICA_EXTERNA=:MADRE_BIOLOGICA_EXTERNA, ESTADO_LACTACION=:ESTADO_LACTACION,
     RODEO=:RODEO, RAZA=:RAZA, POTRERO=:POTRERO,CATEGORIA=:CATEGORIA,CRONOLOGIA_DENTARIA=:CRONOLOGIA_DENTARIA,
     CONDICION_CORPORAL=:CONDICION_CORPORAL, GDR=:GDR, CIRCUNFERENCIA_ESCROTAL=:CIRCUNFERENCIA_ESCROTAL,
     ESTADO_REPRODUCTIVO=:ESTADO_REPRODUCTIVO,ID_PC=:ID_PC,ID_HBA=:ID_HBA,ID_RA=:ID_RA,ID_OTRO=:ID_OTRO,
     NOMBRE=:NOMBRE, SEXO=:SEXO,MADRE_RECEPTORA_EXTERNA=:MADRE_RECEPTORA_EXTERNA,
     APODO=:APODO,MADRE_BIOLOGICA_INTERNA=:MADRE_BIOLOGICA_INTERNA,MADRE_RECEPTORA_INTERNA=:MADRE_RECEPTORA_INTERNA,
     DTA=:DTA, PROPIETARIO = :PROPIETARIO, CRIADOR = :CRIADOR, ORIGEN_ANIMAL = :ORIGEN,
     ADN = :ADN, TIPIFICACION_SANGUINEA = :TIPIFICACION_SANGUINEA, ID_IE = :ID_IE, SUBCATEGORIA = :SUBCATEGORIAAUX,
     MOCHO = :MOCHO, COLOR = :COLOR,
     INFORMADO_AFIP = case :INFORMADO_AFIP when 'SI' then 'S' when 'NO' then 'S' end
  WHERE (ID_ANIMAL=:ID_ANIMAL AND ESTABLECIMIENTO=:ESTABLECIMIENTO);

  SELECT VALOR FROM REL_PARAMETROS_ESTABLECIMIENTO WHERE PARAMETRO = 58 AND ESTABLECIMIENTO = :ESTABLECIMIENTO
  INTO :SISTEMA;

  SELECT FIRST 1 EP.ID_EVENTO, EE.FECHA FROM EVE_PESO EP JOIN EVE_EVENTOS EE ON EE.ID_EVENTO=EP.ID_EVENTO
  WHERE EE.ANIMAL=:ID_ANIMAL AND EE.ESTABLECIMIENTO=:ESTABLECIMIENTO
  ORDER BY EE.FECHA DESC INTO :ID_EVE_PESO, :FECHA_PESO;

  IF (PESO <> 0) THEN
  BEGIN
       IF (SISTEMA = 'AMERICANO') THEN
          SELECT PESO_AJUSTADO, DIAS_AJUSTADO FROM SP_CALCULAR_PESO_AMERICANO (:DIASPESO, :PESO, :ID_ANIMAL, :FECHA_PESO, :ESTABLECIMIENTO)
          INTO :PESO, :DIASPESO;
       ELSE
           SELECT PESO_AJUSTADO, DIAS_AJUSTADO FROM SP_CALCULAR_PESO_AUSTRALIANO (:DIASPESO,:PESO,:ID_ANIMAL,:FECHA_PESO,:ESTABLECIMIENTO)
           INTO :PESO, :DIASPESO;
       UPDATE EVE_PESO SET PESO=:PESO, DIAS=:DIASPESO WHERE ID_EVENTO=:ID_EVE_PESO;
  END

  /*SE ACTUALIZAN LOS GRUPOS A LOS CUALES PERTENECE EL ANIMAL*/

  FOR SELECT GRUPO FROM AUX_GRUPOS WHERE (ID_AUX = :ID_AUX)
      INTO :VARGRUPO
  DO
    IF (VARGRUPO IS NOT NULL) THEN
       IF (NOT EXISTS(SELECT * FROM REL_PERTENECE_GRUPO
       WHERE (ANIMAL=:ID_ANIMAL AND ESTABLECIMIENTO=:ESTABLECIMIENTO AND GRUPO=:VARGRUPO))) THEN
             INSERT INTO REL_PERTENECE_GRUPO (GRUPO, ANIMAL, ESTABLECIMIENTO, ACTIVO)
             VALUES  (:VARGRUPO, :ID_ANIMAL, :ESTABLECIMIENTO, 'S');

  /*SE ACTUALIZAN LOS DATOS DE LOS PADRES*/
  
  PADRES_INT = 0;
  PADRES_EXT = 0;
  SELECT COUNT(*) FROM REL_PADRES_EXTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO)
  INTO :PADRES_EXT;
  SELECT COUNT(*) FROM REL_PADRES_INTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO)
  INTO :PADRES_INT;
  
  IF (((PADRES_EXT <= 1) AND (PADRES_INT <= 1)) AND ((PADRE_EXTERNO IS NOT NULL) OR (PADRE_INTERNO IS NOT NULL))) THEN
  BEGIN
      DELETE FROM REL_PADRES_EXTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO);
      DELETE FROM REL_PADRES_INTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO);

      IF (PADRE_INTERNO IS NOT NULL) THEN
         INSERT INTO REL_PADRES_INTERNOS (PADRE_INTERNO, ANIMAL, ESTABLECIMIENTO) VALUES (:PADRE_INTERNO, :ID_ANIMAL, :ESTABLECIMIENTO);
      ELSE
          IF (PADRE_EXTERNO IS NOT NULL) THEN
             INSERT INTO REL_PADRES_EXTERNOS (PADRE_EXTERNO, ANIMAL, ESTABLECIMIENTO) VALUES (:PADRE_EXTERNO, :ID_ANIMAL, :ESTABLECIMIENTO);
   END
   ELSE
   BEGIN
       IF (PADRE_EXTERNO IS NOT NULL) THEN
       BEGIN
            DELETE FROM REL_PADRES_INTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO);
            DELETE FROM REL_PADRES_EXTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO);
            INSERT INTO REL_PADRES_EXTERNOS (PADRE_EXTERNO, ANIMAL, ESTABLECIMIENTO) VALUES (:PADRE_EXTERNO, :ID_ANIMAL, :ESTABLECIMIENTO);
       END
       IF (PADRE_INTERNO IS NOT NULL) THEN
       BEGIN
            DELETE FROM REL_PADRES_INTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO);
            DELETE FROM REL_PADRES_EXTERNOS WHERE (ANIMAL = :ID_ANIMAL AND ESTABLECIMIENTO = :ESTABLECIMIENTO);
            INSERT INTO REL_PADRES_INTERNOS (PADRE_INTERNO, ANIMAL, ESTABLECIMIENTO) VALUES (:PADRE_INTERNO, :ID_ANIMAL, :ESTABLECIMIENTO);
       END
   END
   /*SE ACTUALIZAN LOS DATOS DEL EVENTO ALTA DIRECTA*/

  SELECT EE.ID_EVENTO
  FROM EVE_ALTA_DIRECTA EAD, EVE_EVENTOS EE
  WHERE (EE.ESTABLECIMIENTO = :ESTABLECIMIENTO AND EE.ANIMAL = :ID_ANIMAL AND EE.ID_EVENTO = EAD.ID_EVENTO)
  INTO :EVENTO;

  IF (EVENTO IS NOT NULL) THEN
  BEGIN
       UPDATE EVE_ALTA_DIRECTA
       SET PRECIO_BRUTO=:PRECIO_BRUTO, PRECIO_UNITARIO=:PRECIO_UNITARIO, GASTOS=:GASTOS, TIPO=:TIPO_ALTA
       WHERE (ID_EVENTO=:EVENTO);
  END
  ELSE
  BEGIN
        SELECT EE.ID_EVENTO FROM EVE_NACIMIENTO EN, EVE_EVENTOS EE
        WHERE (EE.ESTABLECIMIENTO = :ESTABLECIMIENTO AND EE.ANIMAL = :ID_ANIMAL AND EE.ID_EVENTO = EN.ID_EVENTO)
        INTO :EVENTO;
  END

  UPDATE EVE_EVENTOS
  SET OBSERVACION=:OBSERVACION_CORTA, RESPONSABLE=:RESPONSABLE, FECHA=:FECHA_EVENTO
  WHERE (ESTABLECIMIENTO = :ESTABLECIMIENTO AND ANIMAL=:ID_ANIMAL AND ID_EVENTO=:EVENTO);

  FOR SELECT ID_EVENTO FROM EVE_EVENTOS
      WHERE (DISPARADOR = :EVENTO AND ESTABLECIMIENTO = :ESTABLECIMIENTO AND ANIMAL = :ID_ANIMAL)
      INTO :EVENTO_HIJO
  DO
    BEGIN
         UPDATE EVE_EVENTOS
         SET OBSERVACION=:OBSERVACION_CORTA, RESPONSABLE=:RESPONSABLE, FECHA=:FECHA_EVENTO
         WHERE (ESTABLECIMIENTO = :ESTABLECIMIENTO AND ANIMAL=:ID_ANIMAL AND ID_EVENTO=:EVENTO_HIJO);
    END

  ID_OBS = NULL;

  SELECT ID_ANIMAL FROM TAB_OBSERVACIONES
  WHERE (ID_ANIMAL = :ID_ANIMAL)
  INTO :ID_OBS;
  
  IF (:ID_OBS IS NULL) THEN
  BEGIN
       INSERT INTO TAB_OBSERVACIONES (ID_ANIMAL, OBSERVACION)
       VALUES (:ID_ANIMAL, :OBSERVACION);
  END
  ELSE
  BEGIN
       UPDATE TAB_OBSERVACIONES
       SET OBSERVACION = :OBSERVACION
       WHERE (ID_ANIMAL = :ID_ANIMAL);
  END

  DELETE FROM COOPROPIEDAD_INTERNA WHERE ID_ANIMAL = :ID_ANIMAL;

  FOR SELECT ID_PROPIETARIO, PORCENTAJE
      FROM AUX_COOPROPIEDAD
      INTO :PROPIETARIOAUX, :PORCENTAJEAUX
  DO
    BEGIN
       INSERT INTO COOPROPIEDAD_INTERNA(ID_ANIMAL,ID_PROPIETARIO,PORCENTAJE) VALUES(:ID_ANIMAL,:PROPIETARIOAUX,:PORCENTAJEAUX);
    END

  IF (:PROPIETARIOAUX IS NULL) THEN
       INSERT INTO COOPROPIEDAD_INTERNA(ID_ANIMAL,ID_PROPIETARIO,PORCENTAJE) VALUES(:ID_ANIMAL,0,100);

  DELETE FROM AUX_COOPROPIEDAD;
  SUSPEND;

END ^

SET TERM ; ^


