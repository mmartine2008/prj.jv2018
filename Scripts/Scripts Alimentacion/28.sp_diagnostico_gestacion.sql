CREATE OR ALTER PROCEDURE SP_DIAGNOSTICO_GESTACION(
  DIAS_GESTACION INTEGER,
  CRONOLOGIA_DENTARIA INTEGER,
  CONDICION_CORPORAL INTEGER,
  METODO_DIAGNOSTICO INTEGER,
  ESTADO_REPRODUCTIVO INTEGER,
  MUESTREO VARCHAR(1) CHARACTER SET NONE,
  MUCUS VARCHAR(1) CHARACTER SET NONE,
  CONDICION_UTERO VARCHAR(1) CHARACTER SET NONE,
  CONDICION_OVARIO VARCHAR(1) CHARACTER SET NONE,
  CONDICION_CERVIX VARCHAR(1) CHARACTER SET NONE,
  POTRERO INTEGER,
  RECHAZO VARCHAR(1) CHARACTER SET NONE,
  FECHA DATE,
  FECHA_INI DATE,
  FECHA_FIN DATE,
  ANIMAL INTEGER,
  OBSERVACION VARCHAR(255) CHARACTER SET NONE,
  ESTABLECIMIENTO INTEGER,
  RESPONSABLE INTEGER,
  LOG_USUARIO INTEGER,
  LOG_FECHA_MODIFICADO DATE,
  DISPARADOR INTEGER,
  GRUPO INTEGER,
  DIAS_0 INTEGER,
  DISTRIBUCION_0 INTEGER,
  DIAS_1 INTEGER,
  DISTRIBUCION_1 INTEGER,
  DIAS_2 INTEGER,
  DISTRIBUCION_2 INTEGER,
  DIAS_3 INTEGER,
  DISTRIBUCION_3 INTEGER,
  PRECIO DECIMAL(18, 3))
AS
DECLARE VARIABLE TIPOEVE INTEGER;
DECLARE VARIABLE IDNUEVOEVENTO INTEGER;
DECLARE VARIABLE ERANT INTEGER;
DECLARE VARIABLE CDANT INTEGER;
DECLARE VARIABLE COMENTARIO VARCHAR(50);
DECLARE VARIABLE CANTIDADEVENTOSPOSTERIORES INTEGER;
DECLARE VARIABLE SERVICIO INTEGER;
DECLARE VARIABLE FECHAEGRESOSERVICIO DATE;
DECLARE VARIABLE ESTADO_AUX INTEGER;
DECLARE VARIABLE EST_ACTUAL VARCHAR(50);
DECLARE VARIABLE AUX INTEGER;
Begin
   TIPOEVE = 13;

   /* REGISTRO EL EVENTO EN EVE_EVENTOS */
   SELECT ID_EVENTO
   FROM SP_CREACION_EVE_EVENTOS(:FECHA, :ANIMAL, :DISPARADOR, :OBSERVACION, :TIPOEVE, :ESTABLECIMIENTO,
                                :RESPONSABLE, :LOG_USUARIO, :LOG_FECHA_MODIFICADO)
   INTO :IDNUEVOEVENTO;

   /*OBTENEMOS ESTADO REPRODUCTIVO, Y CRONOLOGIA DENTARIA ACTUAL*/
   SELECT CRONOLOGIA_DENTARIA FROM TAB_ANIMALES WHERE (ID_ANIMAL = :ANIMAL)
   INTO :CDANT;

   SELECT TS.ID_SERVICIO
   FROM EVE_EVENTOS EE join EVE_INGRESO_SERVICIO EIS on EE.ID_EVENTO=EIS.ID_EVENTO join
        TAB_SERVICIOS TS on EIS.SERVICIO=TS.ID_SERVICIO
   WHERE EE.TIPO = 20 AND EE.ANIMAL=:ANIMAL AND TS.ACTIVO='S' AND EE.FECHA < :FECHA
   INTO :SERVICIO;
   
/**//**/
   IF (SERVICIO IS NOT NULL) THEN
   BEGIN
       SELECT EE.FECHA
       FROM EVE_EVENTOS EE join EVE_EGRESO_SERVICIO EES on EE.ID_EVENTO=EES.ID_EVENTO join
            TAB_SERVICIOS TS on EES.SERVICIO=TS.ID_SERVICIO
       WHERE EE.TIPO = 15 AND EE.ANIMAL=:ANIMAL AND TS.ID_SERVICIO=:SERVICIO
       INTO :FECHAEGRESOSERVICIO;

       if (FECHAEGRESOSERVICIO IS NULL) then
       BEGIN
          ESTADO_AUX = ESTADO_REPRODUCTIVO;
          ESTADO_REPRODUCTIVO = 3; /*EN SERVICIO*/
       END
       ELSE
           if (FECHAEGRESOSERVICIO > :FECHA) then
             BEGIN
               ESTADO_AUX = ESTADO_REPRODUCTIVO;
               ESTADO_REPRODUCTIVO = 3; /*EN SERVICIO*/
             END
            ELSE
               ESTADO_AUX = NULL;
   END
   ELSE
       ESTADO_AUX = NULL;

   /* REGISTRO EL EVENTO EN EVE_DIAGNOSTICO_GESTACION */
   INSERT INTO EVE_DIAGNOSTICO_GESTACION
     (ID_EVENTO, RECHAZA, DIAS_GESTACION, CONDICION_UTERO, CONDICION_OVARIO, CONDICION_CERVIX,CRONOLOGIA_DENTARIA,
      METODO_DIAGNOSTICO, ESTADO_REPRODUCTIVO, ESTADO_AUX, FECHA_INI, FECHA_FIN, PRECIO)

   VALUES
     (:IDNUEVOEVENTO, :RECHAZO, :DIAS_GESTACION, :CONDICION_UTERO, :CONDICION_OVARIO, :CONDICION_CERVIX,
      :CRONOLOGIA_DENTARIA, :METODO_DIAGNOSTICO, :ESTADO_REPRODUCTIVO, :ESTADO_AUX,
      :FECHA_INI, :FECHA_FIN, :PRECIO);

   --INSERTO TODOS LOS CASOS POSIBLES DE DISTRIBUCIONES Y DIAS DE GESTACION
   IF ((ESTADO_AUX = 2 or ESTADO_REPRODUCTIVO = 2)) THEN
      INSERT INTO TAB_CASOS_DIAG_GEST VALUES (:IDNUEVOEVENTO,:ESTABLECIMIENTO,:DIAS_0,:DISTRIBUCION_0,
      :DIAS_1,:DISTRIBUCION_1,:DIAS_2,:DISTRIBUCION_2,:DIAS_3,:DISTRIBUCION_3);

  -- ACTUALIZO el estado repro DEL ANIMAL */
  SELECT MSG_ESTADO FROM COD_ESTADOS_REPRODUCTIVOS WHERE ID_ESTADO_REPRODUCTIVO = :ESTADO_REPRODUCTIVO
  INTO :EST_ACTUAL;
  SELECT CANTIDAD FROM GEN_CAMBIO_ESTADO_REPRODUCTIVO(:ANIMAL, :FECHA)
  INTO :CANTIDADEVENTOSPOSTERIORES;
  IF (CANTIDADEVENTOSPOSTERIORES = 0) THEN
    UPDATE TAB_ANIMALES SET ESTADO_REPRODUCTIVO = :ESTADO_REPRODUCTIVO, ESTADO_ACTUAL = :EST_ACTUAL WHERE (ID_ANIMAL = :ANIMAL);

  -- para saber si tiene que actualizar los datos actuales del animal me fijo si es el evento mas nuevo
  SELECT COUNT(*)
  FROM EVE_EVENTOS WHERE (TIPO = :TIPOEVE) AND (FECHA > :FECHA) AND (ANIMAL = :ANIMAL)
  INTO :CANTIDADEVENTOSPOSTERIORES;

  IF (CANTIDADEVENTOSPOSTERIORES = 0) THEN
    BEGIN
      UPDATE TAB_ANIMALES
      SET CRONOLOGIA_DENTARIA = :CRONOLOGIA_DENTARIA
      WHERE (ID_ANIMAL = :ANIMAL);
    END

   /* RECHAZO EL ANIMAL */
   if (rechazo = 'S') then
      EXECUTE PROCEDURE SP_RECHAZO(:ANIMAL);

   /* ACTUALIZO EL CAMBIO DE UBICACION DEL ANIMAL */

   COMENTARIO = 'Evento CU disparado por DG';

   if (potrero is not null)then
     select * from SP_CAMBIO_UBICACION(:POTRERO, NULL, NULL, :FECHA, :ANIMAL, :COMENTARIO,
             :ESTABLECIMIENTO, :RESPONSABLE, :LOG_USUARIO, :LOG_FECHA_MODIFICADO, :IDNUEVOEVENTO) into aux;


   /* ACTUALIZO LA CONDICION CORPORAL */

   COMENTARIO = 'Evento CC disparado por DG';

   if (CONDICION_CORPORAL is not null) then
      EXECUTE PROCEDURE SP_CONDICION_CORPORAL( :CONDICION_CORPORAL, :FECHA, :ANIMAL, :COMENTARIO,
             :ESTABLECIMIENTO, :RESPONSABLE, :LOG_USUARIO, :LOG_FECHA_MODIFICADO, :IDNUEVOEVENTO, NULL);

   /* DISPARO DIAGNOSTICO DE ENFERMEDAD (ya no va a ser asi ahora debo mandar un evento sangrado brucelosis)*/
   COMENTARIO = 'Evento Sangrado Brucelosis disparado por DG (M)';
   if (MUESTREO = 'S') then
      EXECUTE PROCEDURE SP_Sangrado_Brucelosis ( 'I', :FECHA, :ANIMAL, :COMENTARIO,
             :ESTABLECIMIENTO, :RESPONSABLE, :LOG_USUARIO, :LOG_FECHA_MODIFICADO, :IDNUEVOEVENTO, null,NULL,NULL);

   /* agrego el evento al grupo si se necesita*/
   EXECUTE PROCEDURE Gen_Agregar_En_Grupo (:ESTABLECIMIENTO ,:IDNUEVOEVENTO ,:GRUPO );
   SUSPEND;
END