SET TERM ^ ;

CREATE OR ALTER PROCEDURE SP_PARTO_MASIVO(
  FECHA DATE,
  ANIMAL INTEGER,
  OBSERVACION VARCHAR(255) CHARACTER SET NONE,
  ESTABLECIMIENTO INTEGER,
  RESPONSABLE INTEGER,
  LOG_USUARIO INTEGER,
  LOG_FECHA_MODIFICADO DATE,
  ID_GRUPO INTEGER,
  DISPARADOR INTEGER,
  TIPO_PARTO INTEGER,
  CAUSA INTEGER,
  GRADO INTEGER,
  OBSERVACION_DISTOCIA VARCHAR(255) CHARACTER SET NONE,
  RODEO INTEGER,
  POTRERO INTEGER,
  FECHA_PARTO DATE,
  CONDICION_CORPORAL INTEGER)
AS
DECLARE VARIABLE IDNUEVOEVENTO INTEGER;
DECLARE VARIABLE TIPOEVE INTEGER;
DECLARE VARIABLE CANT_PARTOS INTEGER;
DECLARE VARIABLE RODEO_AUX INTEGER;
DECLARE VARIABLE POTRERO_AUX INTEGER;
DECLARE VARIABLE NUEVO_ESTADO_REPRO INTEGER;
DECLARE VARIABLE R_AUX INTEGER;
DECLARE VARIABLE P_AUX INTEGER;
DECLARE VARIABLE CANTIDADEVENTOSPOSTERIORES INTEGER;
DECLARE VARIABLE EST_ACTUAL VARCHAR(50);
DECLARE VARIABLE AUX INTEGER;
BEGIN
     TIPOEVE = 39;

     SELECT ID_EVENTO FROM SP_CREACION_EVE_EVENTOS(:FECHA,:ANIMAL, :DISPARADOR, :OBSERVACION,:TIPOEVE,:ESTABLECIMIENTO,:RESPONSABLE,
     :LOG_USUARIO,:LOG_FECHA_MODIFICADO)
     INTO :IDNUEVOEVENTO;
     
     SELECT ESTADO_LACTACION, RODEO, POTRERO
     FROM TAB_ANIMALES
     WHERE (ID_ANIMAL = :ANIMAL)
     INTO :CANT_PARTOS, :RODEO_AUX, :POTRERO_AUX;

     R_AUX = RODEO;
     P_AUX = POTRERO;

     IF ((RODEO_AUX = RODEO) OR (RODEO IS NULL)) THEN
        RODEO = RODEO_AUX;
     IF ((POTRERO_AUX = POTRERO) OR (POTRERO IS NULL)) THEN
        POTRERO = POTRERO_AUX;

     CANT_PARTOS = CANT_PARTOS+1;
     
     SELECT ESTADO_REPRODUCTIVO FROM TAB_ANIMALES WHERE ID_ANIMAL = :ANIMAL INTO :NUEVO_ESTADO_REPRO;
     
     SELECT CANTIDAD FROM GEN_CAMBIO_ESTADO_REPRODUCTIVO(:ANIMAL, :FECHA)
     INTO :CANTIDADEVENTOSPOSTERIORES;
     IF (CANTIDADEVENTOSPOSTERIORES = 0) THEN
     BEGIN
          /*SETEO EL ESTADO DEL ANIMAL A PARIDA Y LA CATEGORIA A VACA*/
          IF (EXISTS(SELECT ID_SERVICIO FROM TAB_SERVICIOS TS JOIN REL_PERTENECE_GRUPO RPG ON TS.GRUPO = RPG.GRUPO
              WHERE TS.ESTABLECIMIENTO = :ESTABLECIMIENTO AND :FECHA > TS.FECHA_INICIO AND RPG.ACTIVO = 'S' AND
              RPG.ANIMAL = :ANIMAL AND TS.ACTIVO = 'S')) THEN
             SELECT ID_ESTADO_REPRODUCTIVO
             FROM COD_ESTADOS_REPRODUCTIVOS WHERE (CODIGO='ES')
             INTO :NUEVO_ESTADO_REPRO;
          ELSE
              SELECT ID_ESTADO_REPRODUCTIVO
              FROM COD_ESTADOS_REPRODUCTIVOS WHERE (CODIGO='PA')
              INTO :NUEVO_ESTADO_REPRO;
     END
     SELECT MSG_ESTADO FROM COD_ESTADOS_REPRODUCTIVOS WHERE ID_ESTADO_REPRODUCTIVO = :NUEVO_ESTADO_REPRO
     INTO :EST_ACTUAL;
     
     UPDATE TAB_ANIMALES SET ESTADO_REPRODUCTIVO=:NUEVO_ESTADO_REPRO, ESTADO_LACTACION=:CANT_PARTOS, CATEGORIA=6, ESTADO_ACTUAL = :EST_ACTUAL
     WHERE (ID_ANIMAL=:ANIMAL);

     INSERT INTO EVE_PARTO_MASIVO VALUES (:IDNUEVOEVENTO,:TIPO_PARTO,:RODEO,:FECHA_PARTO,:POTRERO,:CONDICION_CORPORAL);

     IF (CONDICION_CORPORAL IS NOT NULL) THEN
        EXECUTE PROCEDURE SP_CONDICION_CORPORAL(:CONDICION_CORPORAL, :FECHA, :ANIMAL, 'Evento CC disparado por Parto',
        :ESTABLECIMIENTO, :RESPONSABLE, :LOG_USUARIO, :LOG_FECHA_MODIFICADO, :IDNUEVOEVENTO, NULL);

     IF (CAUSA IS NOT NULL) THEN
        EXECUTE PROCEDURE SP_DISTOCIA (:FECHA, :ANIMAL, :IDNUEVOEVENTO, :OBSERVACION_DISTOCIA, :ESTABLECIMIENTO, :RESPONSABLE,
        :LOG_USUARIO, :LOG_FECHA_MODIFICADO, :CAUSA, :GRADO);

     IF ((R_AUX IS NOT NULL) OR (P_AUX IS NOT NULL)) THEN
           select * from SP_CAMBIO_UBICACION(:POTRERO, :RODEO, NULL, :FECHA, :ANIMAL, 'Evento Disparado por Parto Masivo',
           :ESTABLECIMIENTO, :RESPONSABLE, :LOG_USUARIO, :LOG_FECHA_MODIFICADO, :IDNUEVOEVENTO) into aux;


     EXECUTE PROCEDURE Gen_Agregar_En_Grupo(:ESTABLECIMIENTO,:IDNUEVOEVENTO,:ID_GRUPO);

     SUSPEND;
END ^ 

SET TERM ; ^ 

