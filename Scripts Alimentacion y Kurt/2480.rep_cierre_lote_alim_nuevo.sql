SET TERM ^ ;

CREATE OR ALTER PROCEDURE REP_CIERRE_LOTE_ALIM_NUEVO(
  POTRERO INTEGER,
  RODEO INTEGER,
  ESTABLECIMIENTO INTEGER,
  FECHA_INI DATE,
  FECHA_FIN DATE)
RETURNS(
  RACION INTEGER,
  CANT_ANIMALES DECIMAL(18, 2),
  NOMBRE VARCHAR(100) CHARACTER SET NONE,
  PORC_MS DECIMAL(18, 2),
  KL_MS DECIMAL(18, 2),
  PRECIO DECIMAL(18, 2),
  FECHA_INGRESO DATE,
  CONSUMO_TC DECIMAL(18, 2),
  COSTO DECIMAL(18, 2),
  PORC_USADO DECIMAL(18, 2),
  CANT_DIAS INTEGER,
  NOMBRE_RACION VARCHAR(100) CHARACTER SET NONE,
  FECHA_FIN_R DATE,
  NRO_RACION INTEGER,
  TOTAL_USADO DECIMAL(18, 2))
AS
DECLARE VARIABLE INGRESO DATE;
DECLARE VARIABLE SALIDA DATE;
DECLARE VARIABLE DIAS_AUX INTEGER;
DECLARE VARIABLE DIAS INTEGER;
DECLARE VARIABLE FECHA_INGRESO_AUX DATE;
DECLARE VARIABLE FECHA_ING DATE;
DECLARE VARIABLE CONSUMO_TC_AUX DECIMAL(18, 2);
DECLARE VARIABLE CONS_TC DECIMAL(18, 2);
DECLARE VARIABLE FECHA_FIN_AUX DATE;
DECLARE VARIABLE FECHA_FIN_RACION DATE;
DECLARE VARIABLE KL_MS_AUX DECIMAL(18, 2);
DECLARE VARIABLE KILOS_MS DECIMAL(18, 2);
DECLARE VARIABLE COSTO_AUX DECIMAL(18, 2);
DECLARE VARIABLE COSTO_RACION DECIMAL(18, 2);
DECLARE VARIABLE NOMBRE_ANTERIOR VARCHAR(100);
DECLARE VARIABLE NRO_RACION_ANTERIOR INTEGER;
DECLARE VARIABLE ENTRO INTEGER;
DECLARE VARIABLE RACION_AUX INTEGER;
DECLARE VARIABLE NOMBRE_AUX VARCHAR(100);
DECLARE VARIABLE PRECIO_AUX DECIMAL(18, 2);
DECLARE VARIABLE NOMBRE_RACION_AUX VARCHAR(100);
DECLARE VARIABLE NRO_RACION_AUX INTEGER;
DECLARE VARIABLE PORC_USADO_AUX DECIMAL(18, 2);
DECLARE VARIABLE TOTAL_USADO_AUX DECIMAL(18, 2);
DECLARE VARIABLE PORC_MS_AUX DECIMAL(18, 2);
BEGIN
   /*  for select sum(CANT_DIAS), min(fecha_ingreso),avg(CONSUMO_TC),max(FECHA_FIN_R),avg(kl_ms),avg(costo), racion, nombre,precio,min(fecha_ingreso),nombre_racion, NRO_RACION, porc_usado, TOTAL_USADO,PORC_MS from REP_CIERRE_LOTE_ALIMENTACION(:potrero,:rodeo,:ESTABLECIMIENTO,:fecha_ini,:fecha_fin) group by racion,nombre,precio,nombre_racion,NRO_RACION,porc_usado,total_usado,PORC_MS
     into :cant_dias, :ingreso,:consumo_tc,:FECHA_FIN_R, :kl_ms,:COSTO,:racion, :nombre, :precio,:fecha_ingreso,:nombre_racion,:NRO_RACION,:PORC_USADO,:TOTAL_USADO,:PORC_MS
     do
     begin
       select promedioexistencia from GET_EXISTENCIA_POR_POTRERO (:potrero,:ingreso,:FECHA_FIN_R) INTO CANT_ANIMALES;
       SUSPEND;
     end*/
     NOMBRE_ANTERIOR = NULL;
     NRO_RACION_ANTERIOR = NULL;
     CONSUMO_TC_AUX = 0;
     KL_MS_AUX = 0;
     COSTO_AUX = 0;
     FECHA_INGRESO_AUX = NULL;
     FECHA_FIN_AUX = NULL;
     CONSUMO_TC = 0;
     KL_MS = 0;
     COSTO = 0;
     DIAS_AUX = 0;
     CANT_DIAS = 0;
     FECHA_INGRESO = NULL;
     FECHA_FIN_R = NULL;
     RACION = NULL;
     NOMBRE = NULL;
     PRECIO = 0;
     NOMBRE_RACION = NULL;
     NRO_RACION = 0;
     PORC_USADO = 0;
     TOTAL_USADO = 0;
     PORC_MS = 0;
     CANT_ANIMALES = 0;
     RACION_AUX = NULL;
     NOMBRE_AUX = NULL;
     PRECIO_AUX = 0;
     NOMBRE_RACION_AUX = NULL;
     NRO_RACION_AUX = 0;
     PORC_USADO_AUX = 0;
     TOTAL_USADO_AUX = 0;
     PORC_MS_AUX = 0;

     FOR SELECT CANT_DIAS, FECHA_INGRESO,CONSUMO_TC,FECHA_FIN_R,KL_MS,COSTO,RACION, NOMBRE,PRECIO, NOMBRE_RACION, NRO_RACION, PORC_USADO, TOTAL_USADO,PORC_MS FROM REP_CIERRE_LOTE_ALIMENTACION(:POTRERO,:RODEO,:ESTABLECIMIENTO,:FECHA_INI,:FECHA_FIN) ORDER BY NRO_RACION, NOMBRE
     INTO :DIAS, :FECHA_ING,:CONS_TC,:FECHA_FIN_RACION, :KILOS_MS,:COSTO_RACION,:RACION_AUX, :NOMBRE_AUX, :PRECIO_AUX,:NOMBRE_RACION_AUX,:NRO_RACION_AUX,:PORC_USADO_AUX,:TOTAL_USADO_AUX,:PORC_MS_AUX
     DO
     BEGIN
       ENTRO = 0;
       IF((NOMBRE_ANTERIOR IS NULL) AND (NRO_RACION_ANTERIOR IS NULL))THEN
         BEGIN
           RACION = RACION_AUX;
           NOMBRE = NOMBRE_AUX;
           PRECIO = PRECIO_AUX;
           NOMBRE_RACION = NOMBRE_RACION_AUX;
           NRO_RACION = NRO_RACION_AUX;
           PORC_USADO = PORC_USADO_AUX;
           TOTAL_USADO = TOTAL_USADO_AUX;
           PORC_MS = PORC_MS_AUX;
           NOMBRE_ANTERIOR = NOMBRE_AUX;
           NRO_RACION_ANTERIOR = NRO_RACION_AUX;
           DIAS_AUX = DIAS_AUX + DIAS;
           IF((FECHA_ING < FECHA_INGRESO_AUX) OR (FECHA_INGRESO_AUX IS NULL))THEN
             FECHA_INGRESO_AUX = FECHA_ING;
           CONSUMO_TC_AUX = CONSUMO_TC_AUX + (CONS_TC * dias);
           IF((FECHA_FIN_RACION > FECHA_FIN_AUX) OR (FECHA_FIN_AUX IS NULL))THEN
             FECHA_FIN_AUX = FECHA_FIN_RACION;
           KL_MS_AUX = KL_MS_AUX + (KILOS_MS * dias);
           COSTO_AUX = COSTO_AUX + (COSTO_RACION * dias);
         END
       ELSE
         BEGIN
           IF((NOMBRE_ANTERIOR = NOMBRE_AUX) AND (NRO_RACION_ANTERIOR = NRO_RACION_AUX))THEN
             BEGIN
               DIAS_AUX = DIAS_AUX + DIAS;
               IF((FECHA_ING < FECHA_INGRESO_AUX) OR (FECHA_INGRESO_AUX IS NULL))THEN
                 FECHA_INGRESO_AUX = FECHA_ING;
               CONSUMO_TC_AUX = CONSUMO_TC_AUX + (CONS_TC * dias);
               IF((FECHA_FIN_RACION > FECHA_FIN_AUX) OR (FECHA_FIN_AUX IS NULL))THEN
                 FECHA_FIN_AUX = FECHA_FIN_RACION;
               KL_MS_AUX = KL_MS_AUX + (KILOS_MS * dias);
               COSTO_AUX = COSTO_AUX + (COSTO_RACION * dias);
             END
           ELSE
             BEGIN
               ENTRO = 1;
               CANT_DIAS = DIAS_AUX;
               CONSUMO_TC = CONSUMO_TC_AUX / DIAS_AUX;
               KL_MS = KL_MS_AUX /DIAS_AUX;
               COSTO = COSTO_AUX / DIAS_AUX;
               FECHA_INGRESO = FECHA_INGRESO_AUX;
               FECHA_FIN_R = FECHA_FIN_AUX;
               select promedioexistencia from GET_EXISTENCIA_POR_POTRERO (:potrero,:FECHA_INGRESO,:FECHA_FIN_R) INTO CANT_ANIMALES;
               SUSPEND;
               RACION = RACION_AUX;
                          NOMBRE = NOMBRE_AUX;
           PRECIO = PRECIO_AUX;
           NOMBRE_RACION = NOMBRE_RACION_AUX;
           NRO_RACION = NRO_RACION_AUX;
           PORC_USADO = PORC_USADO_AUX;
           TOTAL_USADO = TOTAL_USADO_AUX;
           PORC_MS = PORC_MS_AUX;
               NOMBRE_ANTERIOR = nombre_aux;
               NRO_RACION_ANTERIOR = nro_racion_aux;
               CONSUMO_TC_AUX = 0;
               KL_MS_AUX = 0;
               COSTO_AUX = 0;
               FECHA_INGRESO_AUX = NULL;
               FECHA_FIN_AUX = NULL;
               KL_MS = 0;
               COSTO = 0;
               DIAS_AUX = 0;
               CANT_DIAS = 0;
               FECHA_INGRESO = NULL;
               FECHA_FIN_R = NULL;
              -- RACION = NULL;
             --  NOMBRE = NULL;
              -- PRECIO = 0;
              -- NOMBRE_RACION = NULL;
             --  NRO_RACION = 0;
              -- PORC_USADO = 0;
              -- TOTAL_USADO = 0;
             --  PORC_MS = 0;
              -- CANT_ANIMALES = 0;
               RACION_AUX = NULL;
               NOMBRE_AUX = NULL;
               PRECIO_AUX = 0;
               NOMBRE_RACION_AUX = NULL;
                NRO_RACION_AUX = 0;
                PORC_USADO_AUX = 0;
                TOTAL_USADO_AUX = 0;
                PORC_MS_AUX = 0;

               DIAS_AUX = DIAS_AUX + DIAS;
               IF((FECHA_ING < FECHA_INGRESO_AUX) OR (FECHA_INGRESO_AUX IS NULL))THEN
                 FECHA_INGRESO_AUX = FECHA_ING;
               CONSUMO_TC_AUX = CONSUMO_TC_AUX + (CONS_TC * dias);
               IF((FECHA_FIN_RACION > FECHA_FIN_AUX) OR (FECHA_FIN_AUX IS NULL))THEN
                 FECHA_FIN_AUX = FECHA_FIN_RACION;
               KL_MS_AUX = KL_MS_AUX + (KILOS_MS * dias);
               COSTO_AUX = COSTO_AUX + (COSTO_RACION * dias);

             END
         END
     END

     if(dias_aux > 0)THEN
       begin
         CANT_DIAS = DIAS_AUX;
         CONSUMO_TC = CONSUMO_TC_AUX / DIAS_AUX;
         KL_MS = KL_MS_AUX /DIAS_AUX;
         COSTO = COSTO_AUX / DIAS_AUX;
         FECHA_INGRESO = FECHA_INGRESO_AUX;
         FECHA_FIN_R = FECHA_FIN_AUX;
         select promedioexistencia from GET_EXISTENCIA_POR_POTRERO (:potrero,:FECHA_INGRESO,:FECHA_FIN_R) INTO CANT_ANIMALES;
         SUSPEND;
       END
END ^ 

SET TERM ; ^ 

